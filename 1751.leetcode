class Solution {
    public int maxValue(int[][] events, int k) {
        Arrays.sort(events, (a, b) -> Integer.compare(a[1], b[1]));
        int[][] dp = new int[events.length + 1][k + 1];
        for(int i = 1; i <= events.length; i++) {
            for(int j = 1; j <= k; j++) {
                dp[i][j] = Math.max(dp[i][j - 1], dp[i - 1][j]);
                int m = binearySearch(events, events[i - 1][0]);
                dp[i][j] = Math.max(dp[m][j - 1] + events[i - 1][2], dp[i][j]);
            }
        }
        
        return dp[events.length][k];
    }
    
    private int binearySearch(int[][] events, int key) {
        int l = 0, r = events.length - 1;
        while(l <= r) {
            int m = (r - l) / 2 + l;
            if(events[m][1] >= key) {
                r = m - 1;
            } else {
                l = m + 1;
            }
        }
        
        return l;
    }
}